{"remainingRequest":"/home/uayeb/Escritorio/disney/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/uayeb/Escritorio/disney/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/uayeb/Escritorio/disney/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/uayeb/Escritorio/disney/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/home/uayeb/Escritorio/disney/src/views/Home.vue","mtime":1590099462899},{"path":"/home/uayeb/Escritorio/disney/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/uayeb/Escritorio/disney/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/uayeb/Escritorio/disney/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/uayeb/Escritorio/disney/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}